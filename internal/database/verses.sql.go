// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: verses.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createVerse = `-- name: CreateVerse :one
INSERT INTO 
    verses (id, created_at, updated_at, num_verse, text, chapter_id)
VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, created_at, updated_at, num_verse, text, chapter_id
`

type CreateVerseParams struct {
	ID        uuid.UUID
	CreatedAt time.Time
	UpdatedAt time.Time
	NumVerse  int32
	Text      string
	ChapterID uuid.UUID
}

func (q *Queries) CreateVerse(ctx context.Context, arg CreateVerseParams) (Verse, error) {
	row := q.db.QueryRowContext(ctx, createVerse,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.NumVerse,
		arg.Text,
		arg.ChapterID,
	)
	var i Verse
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.NumVerse,
		&i.Text,
		&i.ChapterID,
	)
	return i, err
}
